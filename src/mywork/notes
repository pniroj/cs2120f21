Introduction rule - rule that creates a proof
intro rule - uses the reflexive rule
- Introductionrule for ANd takes in a proof of P and a proof of Q separetely
and constructs a proof of (P and Q)
Ex:

axiom eq_refl  : 
  âˆ€ (T : Type)  -- if T is any type (of thing)
    (t : T),    -- and t is thing of that type, T
  t = t         -- the result type: proof of t = t

For all proposition- assume you're given an arbitrary type and use an arbitrary value to conduct proof

Elimination rule - uses a proof (creates a proof of equality)
- Elimination rule for and: if you have a proof of P annd Q, you can use
Elimination rule left to break it down and get a proof of P
Conjecture- proposition you believe is true but don't have proof

Definition- 

proposition- any claim about the world
that can be true or false or unknown

predicate- proposition with parameters

axiom- proposition that you just accept
as true (symmetry and transitivity)

theorem- proposition for which you have
a proof (reflexivity and subsitutability)

axiom wrong: 1 = 0

example : 1 = 0 := wrong

conjuction- proof that uses and (^ operator)

Collab
github Id- 

understand/confused?


